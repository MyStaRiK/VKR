import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { getToken } from "../services/authService";
import Header from "./Header";
import styles from "./Dashboard.module.css";

/* ‚îÄ‚îÄ –∏–∫–æ–Ω–∫–∞‚Äë—Ñ–∞–π–ª —Å¬†—Ü–≤–µ—Ç–æ–º –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
const colorByExt = {
  pdf:  "#EF4444",
  doc:  "#3B82F6", docx: "#3B82F6",
  xls:  "#22C55E", xlsx:"#22C55E",
  ppt:  "#F97316", pptx:"#F97316",
  txt:  "#6B7280"
};
const pickColor = ext => colorByExt[ext] || "#9CA3AF";          // default¬†‚Äî¬†—Å–µ—Ä—ã–π

const FileIcon = ({ ext }) => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill={pickColor(ext)}>
    <path d="M6 2h7l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2Zm7 1.5V8h4.5" />
  </svg>
);

/* ‚îÄ‚îÄ –±–µ–π–¥–∂ —Å—Ç–∞—Ç—É—Å–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
const StatusTag = ({ status = "" }) => {
  const s = status.toString().toLowerCase();

  const css =
    s.includes("signed")   || s.includes("–ø–æ–¥–ø–∏—Å") ? "signed"   :
    s.includes("reject")   || s.includes("–æ—Ç–∫–ª–æ–Ω") ? "rejected" :
    /* –∏–Ω–∞—á–µ */                                           "pending";

  /* —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –≤—ã–≤–æ–¥–∏–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –ø—Ä–∏—à—ë–ª; –º–æ–∂–Ω–æ –∏ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä—å */
  return <span className={`${styles.status} ${styles[css]}`}>{status}</span>;
};

export default function Dashboard() {
  /* –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã */
  const [light, setLight] = useState(false);
  useEffect(() => { document.documentElement.classList.toggle("theme-light", light); }, [light]);

  /* –¥–æ–∫—É–º–µ–Ω—Ç—ã */
  const [docs, setDocs] = useState([]);
  useEffect(() => {
    const token = getToken();
    fetch("http://localhost:4000/api/my-documents?limit=3", {
      headers: { Authorization: `Bearer ${token}` }
    })
      .then(r => r.json())
      .then(d => setDocs(d.documents || []))
      .catch(() => setDocs([]));
  }, []);

  /* —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ */
  const downloadFile = async (id, name) => {
    try {
      const token = getToken();
      const res = await fetch(`http://localhost:4000/api/documents/${id}/download`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      if (!res.ok) throw new Error();
      const blob = await res.blob();
      const url  = window.URL.createObjectURL(blob);
      const a    = document.createElement("a");
      a.href = url; a.download = name; a.click();
      window.URL.revokeObjectURL(url);
    } catch { alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª"); }
  };

  return (
    <>
      <Header />

      <main className={styles.main}>
        <section className={`${styles.card} ${styles.docsCard}`}>
          <h2>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h2>

          <table className={styles.table}>
            <thead>
              <tr>
                <th style={{ width: "46%" }}>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                <th style={{ width: "22%" }}>–î–∞—Ç–∞</th>
                <th style={{ width: "15%" }}>–°—Ç–∞—Ç—É—Å</th>
                <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
              </tr>
            </thead>

            <tbody>
              {docs.map(d => {
                const ext = (d.original_name.split(".").pop() || "").toLowerCase();
                return (
                  <tr key={d.id_request}>
                    <td>
                      <button
                        type="button"
                        className={styles.fileLink}
                        onClick={() => downloadFile(d.id_document, d.original_name)}
                        title={d.original_name}
                      >
                        <FileIcon ext={ext} />
                        <span className={styles.fileName}>{d.original_name}</span>
                      </button>
                    </td>
                    <td>{new Date(d.request_date).toLocaleString()}</td>
                    <td><StatusTag status={d.status} /></td>
                    <td>
                       <button
                        type="button"
                        className={styles.actionBtn}
                        onClick={() => alert("–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")}
                      >
                        –ü–µ—Ä–µ–π—Ç–∏
                      </button>
                    </td>
                  </tr>
                );
              })}
              {!docs.length && (
                <tr><td colSpan={4} style={{ textAlign: "center" }}>–î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</td></tr>
              )}
            </tbody>
          </table>

          <Link to="/documents" className={styles.btnPrimary}>–ü–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Å–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º</Link>
        </section>

        {/* –ù–æ–≤–æ—Å—Ç–∏ (–∫–∞–∫ –±—ã–ª–æ) */}
        <div className={styles.newsGrid}>
          <section className={`${styles.card} ${styles.newsCard}`}>
            <h3>–ù–æ–≤–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã</h3>
            <ul>
              <li>üí° –î–æ–±–∞–≤–ª–µ–Ω–∞ –º–∞—Å—Å–æ–≤–∞—è –ø–æ–¥–ø–∏—Å—å.</li>
              <li>‚öôÔ∏è –£–ª—É—á—à–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å PDF.</li>
              <li>üîê –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã.</li>
            </ul>
          </section>
          <section className={`${styles.card} ${styles.newsCard}`}>
            <h3>–û–±—ä—è–≤–ª–µ–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞</h3>
            <ul>
              <li>üìÖ –î–æ 31¬†–º–∞—è ‚Äî¬†—Å—Ç–∏–ø–µ–Ω–¥–∏—è.</li>
              <li>üìä 16¬†–º–∞—è ‚Äî¬†–≤–µ–±–∏–Ω–∞—Ä.</li>
              <li>üìÅ –ù–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –∑–∞—è–≤–ª–µ–Ω–∏–π.</li>
            </ul>
          </section>
        </div>
      </main>
    </>
  );
}
